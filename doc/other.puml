@startuml
namespace pipeline {
    class Pipeline << (S,Aquamarine) >> {
        + Steps []Step

    }
    class PipelineRawString << (S,Aquamarine) >> {
        + Content string

    }
    class Step << (S,Aquamarine) >> {
        + Name string
        + Image string
        + Commands []string

    }
}


"pipeline.Pipeline" o-- "pipeline.Step"

namespace scripts {
    class rewriter << (S,Aquamarine) >> {
        - ctx context.Context
        - prefix string
        - input *bufio.Reader

        - watch() 
        - writeToOutput(line string) 
        - rewriteInput() <font color=blue>chan</font> error

    }
}



namespace taskpkg {
    class KeysDCS << (S,Aquamarine) >> {
        + Tasks string
        + TasksHistory string
        + TaskProject string
        + TaskLatestId string

    }
    class Task << (S,Aquamarine) >> {
        + ID int
        + ProjectID int
        + JobID int
        + Name string
        + Status TaskResult
        + CreateAt *time.Time
        + NumberOfRetriesOnError int

    }
    class TaskResponse << (S,Aquamarine) >> {
        + Task *Task
        + Message string
        + Error *string

    }
    class TaskResult << (S,Aquamarine) >> {
        + Status TaskStatus
        + Message string
        + RetryCount int
        + RunningAt *time.Time
        + WorkerUUID string

    }
    class Tasks << (S,Aquamarine) >> {
        + Tasks []Task

    }
    class TasksResponse << (S,Aquamarine) >> {
        + Tasks *Tasks
        + Message string
        + Error *string

    }
    class taskpkg.TaskStatus << (T, #FF7700) >>  {
    }
}


"taskpkg.Task" o-- "taskpkg.TaskResult"
"taskpkg.Task" o-- "time.Time"
"taskpkg.TaskResponse" o-- "taskpkg.Task"
"taskpkg.TaskResult" o-- "taskpkg.TaskStatus"
"taskpkg.TaskResult" o-- "time.Time"
"taskpkg.Tasks" o-- "taskpkg.Task"
"taskpkg.TasksResponse" o-- "taskpkg.Tasks"

"__builtin__.int" #.. "taskpkg.TaskStatus"
@enduml
