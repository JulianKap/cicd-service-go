@startuml
package schedule{
annotation schedule {

-var CloseCronChan: chan bool
-var controlChan: chan int
-var Keys: KeysDCS
-init()
+сhanLock()
+сhanUnlock()
+RunCron()
-runSchedule(): error
-setTasksETCD(cli *Client, tasks *Tasks): error
-getTasksETCD(cli *Client, tasks *Tasks): error
-getTasksByProjectETCD(cli *Client, p *Project, tasks *Tasks): error
-getTaskByProjectETCD(cli *Client, t *Task): bool, error
-createTaskByProjectETCD(cli *Client, p *Project, t *Task): error
-deleteTaskByProjectETCD(cli *Client, p *Project, t *Task): bool, error
-getTasksForWorker(cli *Client, m Member, t *Tasks): error
-getTaskForWorker(cli *Client, m Member, t *Task): error
-setTaskForWorker(cli *Client, m Member, t *Task): bool, error
-updateTaskForWorker(cli *Client, m Member, t *Task): error
-updateAllTasks(cli *Client, tasks *Tasks): error
-getJobEtcd(t Task): Job, error
+InitHandler()
+HandleTaskCreate(ctx Context): error
+HandleTasksGetList(ctx Context): error
+HandleTaskGetByID(ctx Context): error
+HandleTaskDeleteByID(ctx Context): error
-tasksScheduler(): bool, error
-setTaskInHistory(task Task): error
-tasksSchedulerWorker(): error, Tasks
+GetMemberWithMinTasks(members Members): *Member, error
}
}


@enduml